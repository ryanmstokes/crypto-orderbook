
1. Set up React and Typescript:

npx create-react-app my-app --template typescript

2. Set up absolute paths and alias:

in tsconfig.json add:

<code>
{
  "compilerOptions": {
    ...
    "baseUrl": "src",
    ...
  },
   "include": [
    "src"
  ]
}
</code>

for pretty paths like "components/..."

3. Add Unit testing library
npm install --save-dev @testing-library/react

4. Add components directory, simple orderbook component and unit test:

Orderbook.tsx
A component which is a wrapper for the orderbook table and its corresponding actions. Currently retuns a simple string.

Unit test check for presence of string.

4. Add Config directory and config json files:

Added a root config object which has many sub config objects as properties.

<code>
/config/index.ts
{
  title: string,
  author: string,
  orderbook: {
    title:string, 
    currencies: {
      title:string, 
      inc: Int
      }[],
    value:["Total", "Size", "Price"]
  }
}
</code>

5. Add and setup Redux
add root store
add currencies store

<code>
const store = {
  title: string,
  sockets:{
    path: string,
    ...
  },
  currencies: [
    {
      title: string, 
      inc: Int
    }[]
  ]
}
</code>

6. Create loadConfig action and reducer

loadConfig action
An action which loads the config file and saves it to the store for future reference.

7. Create head tag in document and inject page title from store. Add favicon.

8. Create Tables component and import/include in Orderbook component. 

Get currencies from store.
Create recursive statement to output each currency table (currently returns a string).

9. Create Table component
Create recursive statement to output table rows. (*Using mock data initially for rows).
Import and include Table component in Tables component.

10. Create Row Component
Create comomponent to show  multiple 


